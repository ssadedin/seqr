version: '2.4'

services:
  postgres:
    image: gcr.io/seqr-project/postgres:9.6
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -h postgres -U postgres
      interval: 5s
      timeout: 10s
      retries: 100


  redis:
    image: gcr.io/seqr-project/redis:gcloud-prod
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 5s
      retries: 100


  mongo:
    image: mongo:3.6.2
    ports:
      - 27017:27017


  kibana:
    image: gcr.io/seqr-project/kibana:gcloud-prod
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_SERVICE_HOSTNAME=${ELASTICSEARCH_SERVICE_HOSTNAME:-host.docker.internal}
      - ELASTICSEARCH_SERVICE_PORT=${ELASTICSEARCH_SERVICE_PORT:-9200}
    healthcheck:
      test: bash -c "curl -s kibana:5601 | grep kibana"
      interval: 3s
      timeout: 5s
      retries: 100


  phenotips:
    image: gcr.io/seqr-project/phenotips:gcloud-prod
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: bash -c "curl -s 'http://localhost:8080/bin/login/XWiki/XWikiLogin' | grep phenotips"
      interval: 5s
      timeout: 10s
      retries: 100


  seqr:
    image: "gcr.io/mcri-01/${SEQR_IMAGE_NAME:-mcri-seqr:latest}"
    ports:
      - 8000:8000
    environment:
      - SEQR_GIT_BRANCH=${SEQR_GIT_BRANCH:?err}
      - PYTHONPATH=/seqr
      - BASE_URL=${BASE_URL:?err}
      - EMAIL_BACKEND=${EMAIL_BACKEND:-django.core.mail.backends.console.EmailBackend}
      - SMTP_EMAIL_HOST=${SMTP_EMAIL_HOST:-host.docker.internal}
      - SMTP_EMAIL_PORT=${SMTP_EMAIL_PORT:-25}
      - DEFAULT_FROM_EMAIL=${SMTP_EMAIL_HOST:-host.docker.internal:-seqr@seqr.mcri.edu.au}
      - STATIC_MEDIA_DIR=/seqr_static_files
      - POSTGRES_SERVICE_HOSTNAME=postgres
      - ELASTICSEARCH_SERVICE_HOSTNAME=${ELASTICSEARCH_SERVICE_HOSTNAME:-host.docker.internal}
      - ELASTICSEARCH_SERVICE_PORT=${ELASTICSEARCH_SERVICE_PORT:-9200}
      - PHENOTIPS_SERVICE_HOSTNAME=phenotips
      - REDIS_SERVICE_HOSTNAME=redis
      - PGHOST=postgres
      - PGUSER=postgres
      - GUNICORN_WORKER_THREADS=3
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      phenotips:
        condition: service_healthy
    healthcheck:
      test: bash -c "curl -s 'http://localhost:8000' | grep html"
